{"ast":null,"code":"export default {\n  name: \"User\",\n  data() {\n    return {\n      statusInfo: [{\n        value: '1',\n        label: '启用'\n      }, {\n        value: '2',\n        label: '审核中'\n      }, {\n        value: '5',\n        label: '审核未通过'\n      }, {\n        value: '3',\n        label: '冻结'\n      }, {\n        value: '4',\n        label: '删除'\n      }],\n      tableData: [],\n      // 所有的数据\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 10,\n      // 每页显示的个数\n      total: 0,\n      username: null,\n      name: null,\n      fromVisible: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入账号',\n          trigger: 'blur'\n        }]\n      },\n      ids: []\n    };\n  },\n  created() {\n    this.load(1);\n  },\n  methods: {\n    handleAdd() {\n      // 新增数据\n      this.form = {}; // 新增数据的时候清空数据\n      this.fromVisible = true; // 打开弹窗\n      //添加时不需要定义状态，为认证用户统一为冻结\n      document.getElementById(\"status\").style.visibility = \"hidden\";\n    },\n    handleEdit(row) {\n      // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row)); // 给form对象赋值  注意要深拷贝数据\n      this.fromVisible = true; // 打开弹窗\n      this.form.password = '******';\n      if (this.form.status === 1) {\n        this.form.status = '启用';\n      } else if (this.form.status === 2) {\n        this.form.status = '审核中';\n      } else if (this.form.status === 5) {\n        this.form.status = '审核未通过';\n      } else if (this.form.status === 3) {\n        this.form.status = '冻结';\n      } else if (this.form.status === 4) {\n        this.form.status = '删除';\n      }\n      document.getElementById(\"status\").style.visibility = \"visilbe\";\n    },\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.$request({\n            url: this.form.id ? '/user/update' : '/user/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              // 表示成功保存\n              this.$message.success('保存成功');\n              this.load(1);\n              this.fromVisible = false;\n            } else {\n              this.$message.error(res.msg); // 弹出错误的信息\n            }\n          });\n        }\n      });\n    },\n\n    del(id) {\n      // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/user/delete/' + id).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id);\n    },\n    delBatch() {\n      // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据');\n        return;\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/user/delete/batch', {\n          data: this.ids\n        }).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    load(pageNum) {\n      // 分页查询\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/user/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          username: this.username,\n          name: this.name\n        }\n      }).then(res => {\n        this.tableData = res.data?.list;\n        this.total = res.data?.total;\n      });\n    },\n    reset() {\n      this.username = null;\n      this.name = null;\n      this.load(1);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    },\n    handleAvatarSuccess(response, file, fileList) {\n      // 把头像属性换成上传的图片的链接\n      this.form.avatar = response.data;\n    },\n    setStatus(row) {\n      if (row.status === 1) {\n        return '启用';\n      } else if (row.status === 2) {\n        return '审核中';\n      } else if (row.status === 3) {\n        return '冻结';\n      } else if (row.status === 4) {\n        return '删除';\n      } else if (row.status === 5) {\n        return '审核未通过';\n      } else {\n        return '';\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","statusInfo","value","label","tableData","pageNum","pageSize","total","username","fromVisible","form","user","JSON","parse","localStorage","getItem","rules","required","message","trigger","ids","created","load","methods","handleAdd","document","getElementById","style","visibility","handleEdit","row","stringify","password","status","save","$refs","formRef","validate","valid","$request","url","id","method","then","res","code","$message","success","error","msg","del","$confirm","type","response","delete","catch","handleSelectionChange","rows","map","v","delBatch","length","warning","get","params","list","reset","handleCurrentChange","handleAvatarSuccess","file","fileList","avatar","setStatus"],"sources":["src/views/manager/User.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"search\">\n      <el-input placeholder=\"请输入账号查询\" style=\"width: 200px\" v-model=\"username\"></el-input>\n      <el-input placeholder=\"请输入姓名查询\" style=\"width: 200px; margin-left: 10px\" v-model=\"name\"></el-input>\n      <el-button type=\"info\" plain style=\"margin-left: 10px\" @click=\"load(1)\">查询</el-button>\n      <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset\">重置</el-button>\n    </div>\n\n    <div class=\"operation\">\n      <el-button type=\"primary\" plain @click=\"handleAdd\">新增</el-button>\n      <el-button type=\"danger\" plain @click=\"delBatch\">批量删除</el-button>\n    </div>\n\n    <div class=\"table\">\n      <el-table :data=\"tableData\" strip @selection-change=\"handleSelectionChange\">\n        <el-table-column type=\"selection\" width=\"55\" align=\"center\"></el-table-column>\n        <el-table-column prop=\"id\" label=\"序号\" width=\"70\" align=\"center\" sortable></el-table-column>\n        <el-table-column label=\"头像\">\n          <template v-slot=\"scope\">\n            <div style=\"display: flex; align-items: center\">\n              <el-image style=\"width: 40px; height: 40px; border-radius: 50%\" v-if=\"scope.row.avatar\"\n                        :src=\"scope.row.avatar\" :preview-src-list=\"[scope.row.avatar]\"></el-image>\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"username\" label=\"账号\"></el-table-column>\n        <el-table-column prop=\"name\" label=\"姓名\"></el-table-column>\n        <el-table-column prop=\"phone\" label=\"电话\"></el-table-column>\n        <!-- <el-table-column prop=\"role\" label=\"角色\">{{ role =  \"USER\" ?\"用户\":\"管理员\"}}</el-table-column> -->\n        <el-table-column prop=\"age\" label=\"年龄\"></el-table-column>\n        <el-table-column prop=\"sex\" label=\"性别\"></el-table-column>\n        <el-table-column prop=\"account\" label=\"账户余额\"></el-table-column>\n        <el-table-column\n          prop=\"status\"\n          label=\"状态\"\n          :formatter=\"setStatus\"\n        />\n        <el-table-column label=\"操作\" align=\"center\" width=\"180\">\n          <template v-slot=\"scope\">\n            <el-button size=\"mini\" type=\"primary\" plain @click=\"handleEdit(scope.row)\">编辑</el-button>\n            <el-button size=\"mini\" type=\"danger\" plain @click=\"del(scope.row.id)\">删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n\n      <div class=\"pagination\">\n        <el-pagination\n            background\n            @current-change=\"handleCurrentChange\"\n            :current-page=\"pageNum\"\n            :page-sizes=\"[5, 10, 20]\"\n            :page-size=\"pageSize\"\n            layout=\"total, prev, pager, next\"\n            :total=\"total\">\n        </el-pagination>\n      </div>\n    </div>\n\n\n    <el-dialog title=\"用户\" :visible.sync=\"fromVisible\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close>\n      <el-form :model=\"form\" label-width=\"100px\" style=\"padding-right: 50px\" :rules=\"rules\" ref=\"formRef\">\n        <el-form-item label=\"头像\">\n          <el-upload\n              class=\"avatar-uploader\"\n              :action=\"$baseUrl + '/files/upload'\"\n              :headers=\"{ token: user.token }\"\n              list-type=\"picture\"\n              :on-success=\"handleAvatarSuccess\"\n          >\n            <el-button type=\"primary\">上传头像</el-button>\n          </el-upload>\n        </el-form-item>\n        <el-form-item label=\"用户名\" prop=\"username\">\n          <el-input v-model=\"form.username\" placeholder=\"用户名\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"密码\" prop=\"password\">\n          <el-input v-model=\"form.password\" placeholder=\"密码\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"姓名\" prop=\"name\">\n          <el-input v-model=\"form.name\" placeholder=\"姓名\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"电话\" prop=\"phone\">\n          <el-input v-model=\"form.phone\" placeholder=\"电话\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"身份证号\" prop=\"id_number\">\n          <el-input v-model=\"form.id_number\" placeholder=\"身份证号\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"年龄\" prop=\"age\">\n          <el-input v-model=\"form.age\" placeholder=\"年龄\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"性别\" prop=\"sex\">\n          <el-radio-group v-model=\"form.sex\">\n            <el-radio label=\"男\"></el-radio>\n            <el-radio label=\"女\"></el-radio>\n          </el-radio-group>\n        </el-form-item>\n        <el-form-item id=\"status\" label=\"状态\" prop=\"status\">\n        <el-select v-model=\"form.status\" placeholder=\"请选择\">\n          <el-option\n            v-for=\"item in statusInfo\"\n            :key=\"item.value\"\n            :label=\"item.label\"\n            :value=\"item.value\">\n          </el-option>\n        </el-select>\n        </el-form-item>\n      </el-form>\n\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"fromVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"save\">确 定</el-button>\n      </div>\n    </el-dialog>\n\n\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"User\",\n  data() {\n    return {\n      statusInfo: [{\n        value: '1',\n        label: '启用'\n      }, {\n        value: '2',\n        label: '审核中'\n      }, {\n        value: '5',\n        label: '审核未通过'\n      }, {\n        value: '3',\n        label: '冻结'\n      }, {\n        value: '4',\n        label: '删除'\n      }],\n      tableData: [],  // 所有的数据\n      pageNum: 1,   // 当前的页码\n      pageSize: 10,  // 每页显示的个数\n      total: 0,\n      username: null,\n      name: null,\n      fromVisible: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {\n        username: [\n          {required: true, message: '请输入账号', trigger: 'blur'},\n        ]\n      },\n      ids: []\n    }\n  },\n  created() {\n    this.load(1)\n  },\n  methods: {\n    handleAdd() {   // 新增数据\n      this.form = {}  // 新增数据的时候清空数据\n      this.fromVisible = true   // 打开弹窗\n      //添加时不需要定义状态，为认证用户统一为冻结\n      document.getElementById(\"status\").style.visibility=\"hidden\";\n    },\n    handleEdit(row) {   // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row))  // 给form对象赋值  注意要深拷贝数据\n      this.fromVisible = true   // 打开弹窗\n      this.form.password = '******'\n      if (this.form.status === 1) {\n        this.form.status = '启用'\n      } else if (this.form.status === 2) {\n        this.form.status = '审核中'\n      } else if (this.form.status === 5) {\n        this.form.status = '审核未通过'\n      } else if (this.form.status === 3) {\n        this.form.status = '冻结'\n      } else if (this.form.status === 4) {\n        this.form.status = '删除'\n      }\n      document.getElementById(\"status\").style.visibility = \"visilbe\";\n      \n    },\n    save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate((valid) => {\n        if (valid) {\n          this.$request({\n            url: this.form.id ? '/user/update' : '/user/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {  // 表示成功保存\n              this.$message.success('保存成功')\n              this.load(1)\n              this.fromVisible = false\n            } else {\n              this.$message.error(res.msg)  // 弹出错误的信息\n            }\n          })\n        }\n      })\n    },\n    del(id) {   // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {type: \"warning\"}).then(response => {\n        this.$request.delete('/user/delete/' + id).then(res => {\n          if (res.code === '200') {   // 表示操作成功\n            this.$message.success('操作成功')\n            \n          } else {\n            this.$message.error(res.msg)  // 弹出错误的信息\n          }\n        })\n      }).catch(() => {\n      })\n    },\n    handleSelectionChange(rows) {   // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id)\n    },\n    delBatch() {   // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据')\n        return\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {type: \"warning\"}).then(response => {\n        this.$request.delete('/user/delete/batch', {data: this.ids}).then(res => {\n          if (res.code === '200') {   // 表示操作成功\n            this.$message.success('操作成功')\n            this.load(1)\n          } else {\n            this.$message.error(res.msg)  // 弹出错误的信息\n          }\n        })\n      }).catch(() => {\n      })\n    },\n    load(pageNum) {  // 分页查询\n      if (pageNum) this.pageNum = pageNum\n      this.$request.get('/user/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          username: this.username,\n          name: this.name,\n        }\n      }).then(res => {\n        this.tableData = res.data?.list\n        this.total = res.data?.total\n      })\n    },\n    reset() {\n      this.username = null\n      this.name = null\n      this.load(1)\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum)\n    },\n    handleAvatarSuccess(response, file, fileList) {\n      // 把头像属性换成上传的图片的链接\n      this.form.avatar = response.data\n    },\n    setStatus(row) {\n      if (row.status === 1) {\n        return '启用'\n      } else if (row.status === 2) {\n        return '审核中'\n      } else if (row.status === 3) {\n        return '冻结'\n      } else if (row.status === 4) {\n        return '删除'\n      } else if (row.status === 5) {\n        return '审核未通过'\n      }else {\n        return ''\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"],"mappings":"AAwHA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,UAAA;QACAC,KAAA;QACAC,KAAA;MACA;QACAD,KAAA;QACAC,KAAA;MACA;QACAD,KAAA;QACAC,KAAA;MACA;QACAD,KAAA;QACAC,KAAA;MACA;QACAD,KAAA;QACAC,KAAA;MACA;MACAC,SAAA;MAAA;MACAC,OAAA;MAAA;MACAC,QAAA;MAAA;MACAC,KAAA;MACAC,QAAA;MACAT,IAAA;MACAU,WAAA;MACAC,IAAA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,KAAA;QACAR,QAAA,GACA;UAAAS,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;MACAC,GAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,IAAA;EACA;EACAC,OAAA;IACAC,UAAA;MAAA;MACA,KAAAd,IAAA;MACA,KAAAD,WAAA;MACA;MACAgB,QAAA,CAAAC,cAAA,WAAAC,KAAA,CAAAC,UAAA;IACA;IACAC,WAAAC,GAAA;MAAA;MACA,KAAApB,IAAA,GAAAE,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAmB,SAAA,CAAAD,GAAA;MACA,KAAArB,WAAA;MACA,KAAAC,IAAA,CAAAsB,QAAA;MACA,SAAAtB,IAAA,CAAAuB,MAAA;QACA,KAAAvB,IAAA,CAAAuB,MAAA;MACA,gBAAAvB,IAAA,CAAAuB,MAAA;QACA,KAAAvB,IAAA,CAAAuB,MAAA;MACA,gBAAAvB,IAAA,CAAAuB,MAAA;QACA,KAAAvB,IAAA,CAAAuB,MAAA;MACA,gBAAAvB,IAAA,CAAAuB,MAAA;QACA,KAAAvB,IAAA,CAAAuB,MAAA;MACA,gBAAAvB,IAAA,CAAAuB,MAAA;QACA,KAAAvB,IAAA,CAAAuB,MAAA;MACA;MACAR,QAAA,CAAAC,cAAA,WAAAC,KAAA,CAAAC,UAAA;IAEA;IACAM,KAAA;MAAA;MACA,KAAAC,KAAA,CAAAC,OAAA,CAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAC,QAAA;YACAC,GAAA,OAAA9B,IAAA,CAAA+B,EAAA;YACAC,MAAA,OAAAhC,IAAA,CAAA+B,EAAA;YACAzC,IAAA,OAAAU;UACA,GAAAiC,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAC,IAAA;cAAA;cACA,KAAAC,QAAA,CAAAC,OAAA;cACA,KAAAzB,IAAA;cACA,KAAAb,WAAA;YACA;cACA,KAAAqC,QAAA,CAAAE,KAAA,CAAAJ,GAAA,CAAAK,GAAA;YACA;UACA;QACA;MACA;IACA;;IACAC,IAAAT,EAAA;MAAA;MACA,KAAAU,QAAA;QAAAC,IAAA;MAAA,GAAAT,IAAA,CAAAU,QAAA;QACA,KAAAd,QAAA,CAAAe,MAAA,mBAAAb,EAAA,EAAAE,IAAA,CAAAC,GAAA;UACA,IAAAA,GAAA,CAAAC,IAAA;YAAA;YACA,KAAAC,QAAA,CAAAC,OAAA;UAEA;YACA,KAAAD,QAAA,CAAAE,KAAA,CAAAJ,GAAA,CAAAK,GAAA;UACA;QACA;MACA,GAAAM,KAAA,QACA;IACA;IACAC,sBAAAC,IAAA;MAAA;MACA,KAAArC,GAAA,GAAAqC,IAAA,CAAAC,GAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAlB,EAAA;IACA;IACAmB,SAAA;MAAA;MACA,UAAAxC,GAAA,CAAAyC,MAAA;QACA,KAAAf,QAAA,CAAAgB,OAAA;QACA;MACA;MACA,KAAAX,QAAA;QAAAC,IAAA;MAAA,GAAAT,IAAA,CAAAU,QAAA;QACA,KAAAd,QAAA,CAAAe,MAAA;UAAAtD,IAAA,OAAAoB;QAAA,GAAAuB,IAAA,CAAAC,GAAA;UACA,IAAAA,GAAA,CAAAC,IAAA;YAAA;YACA,KAAAC,QAAA,CAAAC,OAAA;YACA,KAAAzB,IAAA;UACA;YACA,KAAAwB,QAAA,CAAAE,KAAA,CAAAJ,GAAA,CAAAK,GAAA;UACA;QACA;MACA,GAAAM,KAAA,QACA;IACA;IACAjC,KAAAjB,OAAA;MAAA;MACA,IAAAA,OAAA,OAAAA,OAAA,GAAAA,OAAA;MACA,KAAAkC,QAAA,CAAAwB,GAAA;QACAC,MAAA;UACA3D,OAAA,OAAAA,OAAA;UACAC,QAAA,OAAAA,QAAA;UACAE,QAAA,OAAAA,QAAA;UACAT,IAAA,OAAAA;QACA;MACA,GAAA4C,IAAA,CAAAC,GAAA;QACA,KAAAxC,SAAA,GAAAwC,GAAA,CAAA5C,IAAA,EAAAiE,IAAA;QACA,KAAA1D,KAAA,GAAAqC,GAAA,CAAA5C,IAAA,EAAAO,KAAA;MACA;IACA;IACA2D,MAAA;MACA,KAAA1D,QAAA;MACA,KAAAT,IAAA;MACA,KAAAuB,IAAA;IACA;IACA6C,oBAAA9D,OAAA;MACA,KAAAiB,IAAA,CAAAjB,OAAA;IACA;IACA+D,oBAAAf,QAAA,EAAAgB,IAAA,EAAAC,QAAA;MACA;MACA,KAAA5D,IAAA,CAAA6D,MAAA,GAAAlB,QAAA,CAAArD,IAAA;IACA;IACAwE,UAAA1C,GAAA;MACA,IAAAA,GAAA,CAAAG,MAAA;QACA;MACA,WAAAH,GAAA,CAAAG,MAAA;QACA;MACA,WAAAH,GAAA,CAAAG,MAAA;QACA;MACA,WAAAH,GAAA,CAAAG,MAAA;QACA;MACA,WAAAH,GAAA,CAAAG,MAAA;QACA;MACA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}