{"ast":null,"code":"import E from \"wangeditor\";\nexport default {\n  name: \"News\",\n  data() {\n    return {\n      tableData: [],\n      // 所有的数据\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 10,\n      // 每页显示的个数\n      total: 0,\n      title: null,\n      fromVisible: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {\n        title: [{\n          required: true,\n          message: '请输入标题',\n          trigger: 'blur'\n        }],\n        descr: [{\n          required: true,\n          message: '请输入简介',\n          trigger: 'blur'\n        }]\n      },\n      ids: [],\n      categoryList: [],\n      content: '',\n      fromVisible1: false\n    };\n  },\n  created() {\n    this.load(1);\n    this.$request.get('/category/selectAll').then(res => {\n      this.categoryList = res.data || [];\n    });\n  },\n  methods: {\n    handleAdd() {\n      // 新增数据\n      this.form = {}; // 新增数据的时候清空数据\n      this.fromVisible = true; // 打开弹窗\n      this.setRichText('');\n    },\n    handleEdit(row) {\n      // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row)); // 给form对象赋值  注意要深拷贝数据\n      this.fromVisible = true; // 打开弹窗\n      this.setRichText(this.form.content);\n    },\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.form.content = this.editor.txt.html();\n          this.$request({\n            url: this.form.id ? '/news/update' : '/news/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              // 表示成功保存\n              this.$message.success('保存成功');\n              this.load(1);\n              this.fromVisible = false;\n            } else {\n              this.$message.error(res.msg); // 弹出错误的信息\n            }\n          });\n        }\n      });\n    },\n\n    del(id) {\n      // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/news/delete/' + id).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id); //  [1,2]\n    },\n\n    delBatch() {\n      // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据');\n        return;\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/news/delete/batch', {\n          data: this.ids\n        }).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    load(pageNum) {\n      // 分页查询\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/news/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          title: this.title\n        }\n      }).then(res => {\n        this.tableData = res.data?.list;\n        this.total = res.data?.total;\n      });\n    },\n    reset() {\n      this.title = null;\n      this.load(1);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    },\n    handleCoverSuccess(res) {\n      this.form.cover = res.data;\n    },\n    setRichText(html) {\n      this.$nextTick(() => {\n        this.editor = new E(`#editor`);\n        this.editor.config.uploadImgServer = this.$baseUrl + '/files/editor/upload';\n        this.editor.config.uploadFileName = 'file';\n        this.editor.config.uploadImgHeaders = {\n          token: this.user.token\n        };\n        this.editor.config.uploadImgParams = {\n          type: 'img'\n        };\n        this.editor.create(); // 创建\n        this.editor.txt.html(html);\n      });\n    },\n    preview(content) {\n      this.content = content;\n      this.fromVisible1 = true;\n    }\n  }\n};","map":{"version":3,"names":["E","name","data","tableData","pageNum","pageSize","total","title","fromVisible","form","user","JSON","parse","localStorage","getItem","rules","required","message","trigger","descr","ids","categoryList","content","fromVisible1","created","load","$request","get","then","res","methods","handleAdd","setRichText","handleEdit","row","stringify","save","$refs","formRef","validate","valid","editor","txt","html","url","id","method","code","$message","success","error","msg","del","$confirm","type","response","delete","catch","handleSelectionChange","rows","map","v","delBatch","length","warning","params","list","reset","handleCurrentChange","handleCoverSuccess","cover","$nextTick","config","uploadImgServer","$baseUrl","uploadFileName","uploadImgHeaders","token","uploadImgParams","create","preview"],"sources":["src/views/manager/News.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"search\">\n      <el-input placeholder=\"请输入标题查询\" style=\"width: 200px\" v-model=\"title\"></el-input>\n      <el-button type=\"info\" plain style=\"margin-left: 10px\" @click=\"load(1)\">查询</el-button>\n      <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset\">重置</el-button>\n    </div>\n\n    <div class=\"operation\">\n      <el-button type=\"primary\" plain @click=\"handleAdd\">新增</el-button>\n      <el-button type=\"danger\" plain @click=\"delBatch\">批量删除</el-button>\n    </div>\n\n    <div class=\"table\">\n      <el-table :data=\"tableData\" strip @selection-change=\"handleSelectionChange\">\n        <el-table-column type=\"selection\" width=\"55\" align=\"center\"></el-table-column>\n        <el-table-column prop=\"id\" label=\"序号\" width=\"70\" align=\"center\" sortable></el-table-column>\n        <el-table-column prop=\"title\" label=\"标题\" show-overflow-tooltip></el-table-column>\n        <el-table-column prop=\"descr\" label=\"简介\" show-overflow-tooltip></el-table-column>\n        <el-table-column label=\"查看内容\">\n          <template v-slot=\"scope\">\n            <el-button @click=\"preview(scope.row.content)\">查看内容</el-button>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"cover\" label=\"封面\">\n          <template v-slot=\"scope\">\n            <el-image :preview-src-list=\"[scope.row.cover]\" :src=\"scope.row.cover\" style=\"width: 60px; height: 40px;\"></el-image>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"time\" label=\"发布时间\"></el-table-column>\n        <el-table-column prop=\"count\" label=\"浏览次数\"></el-table-column>\n        <el-table-column prop=\"category\" label=\"分类\"></el-table-column>\n        <el-table-column label=\"操作\" align=\"center\" width=\"180\">\n          <template v-slot=\"scope\">\n            <el-button size=\"mini\" type=\"primary\" plain @click=\"handleEdit(scope.row)\">编辑</el-button>\n            <el-button size=\"mini\" type=\"danger\" plain @click=\"del(scope.row.id)\">删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n\n      <div class=\"pagination\">\n        <el-pagination\n            background\n            @current-change=\"handleCurrentChange\"\n            :current-page=\"pageNum\"\n            :page-sizes=\"[5, 10, 20]\"\n            :page-size=\"pageSize\"\n            layout=\"total, prev, pager, next\"\n            :total=\"total\">\n        </el-pagination>\n      </div>\n    </div>\n\n\n    <el-dialog title=\"信息\" :visible.sync=\"fromVisible\" width=\"50%\" :close-on-click-modal=\"false\" destroy-on-close>\n      <el-form :model=\"form\" label-width=\"100px\" style=\"padding-right: 50px\" :rules=\"rules\" ref=\"formRef\">\n        <el-form-item label=\"标题\" prop=\"title\">\n          <el-input v-model=\"form.title\" placeholder=\"标题\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"简介\" prop=\"descr\">\n          <el-input type=\"textarea\" v-model=\"form.descr\" placeholder=\"简介\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"封面\" prop=\"cover\">\n          <el-upload\n              class=\"avatar-uploader\"\n              :action=\"$baseUrl + '/files/upload'\"\n              :headers=\"{ token: user.token }\"\n              list-type=\"picture\"\n              :on-success=\"handleCoverSuccess\"\n          >\n            <el-button type=\"primary\">上传封面</el-button>\n          </el-upload>\n        </el-form-item>\n        <el-form-item label=\"分类\" prop=\"category\">\n          <el-select style=\"width: 100%\" v-model=\"form.category\">\n            <el-option v-for=\"item in categoryList\" :key=\"item.id\" :value=\"item.name\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"内容\" prop=\"content\">\n          <div id=\"editor\"></div>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"fromVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"save\">确 定</el-button>\n      </div>\n    </el-dialog>\n\n    <el-dialog title=\"文章内容\" :visible.sync=\"fromVisible1\" width=\"50%\" :close-on-click-modal=\"false\" destroy-on-close>\n      <div class=\"w-e-text\">\n        <div v-html=\"content\"></div>\n      </div>\n\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"fromVisible1 = false\">关 闭</el-button>\n      </div>\n    </el-dialog>\n\n  </div>\n</template>\n\n<script>\nimport E from \"wangeditor\"\n\nexport default {\n  name: \"News\",\n  data() {\n    return {\n      tableData: [],  // 所有的数据\n      pageNum: 1,   // 当前的页码\n      pageSize: 10,  // 每页显示的个数\n      total: 0,\n      title: null,\n      fromVisible: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {\n        title: [\n          {required: true, message: '请输入标题', trigger: 'blur'},\n        ],\n        descr: [\n          {required: true, message: '请输入简介', trigger: 'blur'},\n        ]\n      },\n      ids: [],\n      categoryList: [],\n      content: '',\n      fromVisible1: false\n    }\n  },\n  created() {\n    this.load(1)\n\n    this.$request.get('/category/selectAll').then(res => {\n      this.categoryList = res.data || []\n    })\n  },\n  methods: {\n    handleAdd() {   // 新增数据\n      this.form = {}  // 新增数据的时候清空数据\n      this.fromVisible = true   // 打开弹窗\n      this.setRichText('')\n    },\n    handleEdit(row) {   // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row))  // 给form对象赋值  注意要深拷贝数据\n      this.fromVisible = true   // 打开弹窗\n      this.setRichText(this.form.content)\n    },\n    save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate((valid) => {\n        if (valid) {\n          this.form.content = this.editor.txt.html()\n          this.$request({\n            url: this.form.id ? '/news/update' : '/news/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {  // 表示成功保存\n              this.$message.success('保存成功')\n              this.load(1)\n              this.fromVisible = false\n            } else {\n              this.$message.error(res.msg)  // 弹出错误的信息\n            }\n          })\n        }\n      })\n    },\n    del(id) {   // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {type: \"warning\"}).then(response => {\n        this.$request.delete('/news/delete/' + id).then(res => {\n          if (res.code === '200') {   // 表示操作成功\n            this.$message.success('操作成功')\n            this.load(1)\n          } else {\n            this.$message.error(res.msg)  // 弹出错误的信息\n          }\n        })\n      }).catch(() => {\n      })\n    },\n    handleSelectionChange(rows) {   // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id)   //  [1,2]\n    },\n    delBatch() {   // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据')\n        return\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {type: \"warning\"}).then(response => {\n        this.$request.delete('/news/delete/batch', {data: this.ids}).then(res => {\n          if (res.code === '200') {   // 表示操作成功\n            this.$message.success('操作成功')\n            this.load(1)\n          } else {\n            this.$message.error(res.msg)  // 弹出错误的信息\n          }\n        })\n      }).catch(() => {\n      })\n    },\n    load(pageNum) {  // 分页查询\n      if (pageNum) this.pageNum = pageNum\n      this.$request.get('/news/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          title: this.title,\n        }\n      }).then(res => {\n        this.tableData = res.data?.list\n        this.total = res.data?.total\n      })\n    },\n    reset() {\n      this.title = null\n      this.load(1)\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum)\n    },\n    handleCoverSuccess(res) {\n      this.form.cover = res.data\n    },\n    setRichText(html) {\n      this.$nextTick(() => {\n        this.editor = new E(`#editor`)\n        this.editor.config.uploadImgServer = this.$baseUrl + '/files/editor/upload'\n        this.editor.config.uploadFileName = 'file'\n        this.editor.config.uploadImgHeaders = {\n          token: this.user.token\n        }\n        this.editor.config.uploadImgParams = {\n          type: 'img',\n        }\n        this.editor.create()  // 创建\n        this.editor.txt.html(html)\n      })\n    },\n    preview(content) {\n      this.content = content\n      this.fromVisible1 = true\n    },\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}