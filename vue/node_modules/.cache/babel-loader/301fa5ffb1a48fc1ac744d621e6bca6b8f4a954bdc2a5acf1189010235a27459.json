{"ast":null,"code":"export default {\n  methods: {\n    load() {\n      let myFrame = this.$refs[\"myFrame\"];\n      myFrame.onload = function () {\n        let iframeWin = myFrame.contentWindow;\n        // 填充账号、密码和验证码\n        iframeWin.document.querySelector('input[type=\"text\"]').value = 'admin';\n        iframeWin.document.querySelector('input[type=\"password\"]').value = 'Ab1234';\n        iframeWin.document.querySelector('input[type=\"vercode\"]').value = '8888';\n        // 触发登录按钮点击事件\n        iframeWin.document.querySelector('.login-submit').click();\n\n        // 登录成功后跳转到指定页面\n        iframeWin.onload = function () {\n          // 修改 iframe 的 src 属性来跳转页面\n          myFrame.src = 'http://192.168.86.3:5000/#/home';\n        };\n      };\n    },\n    reset() {\n      // 重置输入框内容\n      this.username = '';\n    }\n  }\n\n  // data() {\n  //   return {};\n  // },\n  // created() {},\n  // mounted() {\n  //   this.iframeInit();\n  // },\n  // computed: {},\n  // methods: {\n  //   iframeInit() {\n  //     let myFrame = this.$refs[\"myFrame\"];\n  //     if (myFrame.attachEvent) {\n  //       //兼容浏览器判断\n  //       myFrame.attachEvent(\"onload\", function () {\n  //         let iframeWin = myFrame.contentWindow;\n  //         iframeWin.postMessage(\n  //             { router: \"/home\", user: \"admin\", password: \"Ab1234\",vercode: 8888 },\n  //             \"*\"\n  //         );\n  //         //data传递的参数   *写成子页面的域名或者是ip\n  //       });\n  //     } else {\n  //       myFrame.onload = function () {\n  //         let iframeWin = myFrame.contentWindow;\n  //         iframeWin.postMessage(\n  //             { router: \"/home\", user: \"admin\", password: \"Ab1234\",vercode: 8888 },\n  //             \"*\"\n  //         );\n  //       };\n  //     }\n  //   },\n  // },\n};","map":{"version":3,"names":["methods","load","myFrame","$refs","onload","iframeWin","contentWindow","document","querySelector","value","click","src","reset","username"],"sources":["src/views/manager/qk.vue"],"sourcesContent":["<template>\r\n  <div>\r\n<!--    <div class=\"search\">-->\r\n<!--      <el-input placeholder=\"请输入账号查询\" style=\"width: 200px\" v-model=\"username\"></el-input>-->\r\n<!--      <el-button type=\"info\" plain style=\"margin-left: 10px\" @click=\"load(1)\">查询</el-button>-->\r\n<!--      <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset\">重置</el-button>-->\r\n<!--    </div>-->\r\n    <div >\r\n<!--      <h2>嵌入CSDN</h2>-->\r\n      <br>\r\n      <iframe\r\n          ref=\"myFrame\"\r\n          src=\"http://43.139.97.90:5100/#/home\"\r\n          frameborder=\"0\"\r\n          width=\"100%\"\r\n          height=\"900\"\r\n      ></iframe>\r\n\r\n<!--      <iframe id=\"child\" src='https://www.csdn.net'  width=\"1600px\" height=\"800px\" frameborder=\"0\" scrolling=\"0\" ></iframe>-->\r\n<!--      <iframe id=\"child\" src='http://43.139.97.90:5002/WeBASE-Front/#/home'  width=\"1600px\" height=\"800px\" frameborder=\"0\" scrolling=\"0\" ></iframe>-->\r\n<!--      <iframe id=\"child\" style=\"WIDTH: 496px; HEIGHT: 1525px \" src='http://43.139.97.90:5002/WeBASE-Front/#/home'  frameborder=\"0\" scrolling=\"0\" security=\"restricted\" sandbox=\"allow-scripts allow-same-origin allow-popups\"></iframe>-->\r\n<!--      <iframe-->\r\n<!--          ref=\"myFrame\"-->\r\n<!--          src=\"http://192.168.86.3:3006/#/login\"-->\r\n<!--          frameborder=\"0\"-->\r\n<!--          width=\"100%\"-->\r\n<!--          height=\"700\"-->\r\n<!--      ></iframe>-->\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  methods: {\r\n    load() {\r\n      let myFrame = this.$refs[\"myFrame\"];\r\n      myFrame.onload = function () {\r\n        let iframeWin = myFrame.contentWindow;\r\n        // 填充账号、密码和验证码\r\n        iframeWin.document.querySelector('input[type=\"text\"]').value = 'admin';\r\n        iframeWin.document.querySelector('input[type=\"password\"]').value = 'Ab1234';\r\n        iframeWin.document.querySelector('input[type=\"vercode\"]').value = '8888';\r\n        // 触发登录按钮点击事件\r\n        iframeWin.document.querySelector('.login-submit').click();\r\n\r\n        // 登录成功后跳转到指定页面\r\n        iframeWin.onload = function() {\r\n          // 修改 iframe 的 src 属性来跳转页面\r\n          myFrame.src = 'http://192.168.86.3:5000/#/home';\r\n        };\r\n      };\r\n    },\r\n    reset() {\r\n      // 重置输入框内容\r\n      this.username = '';\r\n    }\r\n  }\r\n\r\n\r\n  // data() {\r\n  //   return {};\r\n  // },\r\n  // created() {},\r\n  // mounted() {\r\n  //   this.iframeInit();\r\n  // },\r\n  // computed: {},\r\n  // methods: {\r\n  //   iframeInit() {\r\n  //     let myFrame = this.$refs[\"myFrame\"];\r\n  //     if (myFrame.attachEvent) {\r\n  //       //兼容浏览器判断\r\n  //       myFrame.attachEvent(\"onload\", function () {\r\n  //         let iframeWin = myFrame.contentWindow;\r\n  //         iframeWin.postMessage(\r\n  //             { router: \"/home\", user: \"admin\", password: \"Ab1234\",vercode: 8888 },\r\n  //             \"*\"\r\n  //         );\r\n  //         //data传递的参数   *写成子页面的域名或者是ip\r\n  //       });\r\n  //     } else {\r\n  //       myFrame.onload = function () {\r\n  //         let iframeWin = myFrame.contentWindow;\r\n  //         iframeWin.postMessage(\r\n  //             { router: \"/home\", user: \"admin\", password: \"Ab1234\",vercode: 8888 },\r\n  //             \"*\"\r\n  //         );\r\n  //       };\r\n  //     }\r\n  //   },\r\n  // },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":"AAwCA;EACAA,OAAA;IACAC,KAAA;MACA,IAAAC,OAAA,QAAAC,KAAA;MACAD,OAAA,CAAAE,MAAA;QACA,IAAAC,SAAA,GAAAH,OAAA,CAAAI,aAAA;QACA;QACAD,SAAA,CAAAE,QAAA,CAAAC,aAAA,uBAAAC,KAAA;QACAJ,SAAA,CAAAE,QAAA,CAAAC,aAAA,2BAAAC,KAAA;QACAJ,SAAA,CAAAE,QAAA,CAAAC,aAAA,0BAAAC,KAAA;QACA;QACAJ,SAAA,CAAAE,QAAA,CAAAC,aAAA,kBAAAE,KAAA;;QAEA;QACAL,SAAA,CAAAD,MAAA;UACA;UACAF,OAAA,CAAAS,GAAA;QACA;MACA;IACA;IACAC,MAAA;MACA;MACA,KAAAC,QAAA;IACA;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}